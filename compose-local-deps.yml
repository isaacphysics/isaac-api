# Note: When running locally in ubuntu in order for ElasticSearch to wrok 
# you will need to run 
# sysctl -w vm.max_map_count=262144
version: '2'
services:
  equality-checker:
    network_mode: bridge
    container_name: equality-checker
    image: ucamcldtg/equality-checker
    ports:
      - "5000:5000"
  chemistry-checker:
    network_mode: bridge
    container_name: chemistry-checker
    image: ucamcldtg/chemistry-checker
    ports:
      - "5001:5000"
    volumes:
      - ../.m2:/root/.m2:rw
  elasticsearch:
    network_mode: bridge
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      - cluster.name=isaac
      - "network.host=0.0.0.0"
      - node.name=localhost
      - cluster.initial_master_nodes=localhost
      - http.max_content_length=512mb
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    mem_limit: 6G
  cs-elasticsearch:
    network_mode: bridge
    container_name: cs-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      - cluster.name=cs-isaac
      - "network.host=0.0.0.0"
      - node.name=localhost
      - cluster.initial_master_nodes=localhost
      - http.max_content_length=512mb
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic
    ports:
      - "9201:9200"
      - "9301:9300"
    mem_limit: 6G
  postgres:
    network_mode: bridge
    container_name: postgres
    image: postgres:12
    volumes:
      - pg-local:/var/lib/postgresql/data
      - ./src/main/resources/db_scripts/postgres-rutherford-create-script.sql:/docker-entrypoint-initdb.d/00-isaac-create.sql:ro
      - ./src/main/resources/db_scripts/postgres-rutherford-functions.sql:/docker-entrypoint-initdb.d/01-isaac-functions.sql:ro
      - ./src/main/resources/db_scripts/quartz_scheduler_create_script.sql:/docker-entrypoint-initdb.d/02-isaac-quartz.sql:ro
    environment:
      POSTGRES_USER: rutherford
      POSTGRES_PASSWORD: rutherf0rd
    ports:
      - "5432:5432"
#  app-physics:
#    network_mode: bridge
#    container_name: app-physics
#    image: nginx:stable
#    volumes:
#      - "../isaac-app/app:/usr/share/nginx/html:ro"
#      - "../isaac-app/nginx.conf:/etc/nginx/nginx.conf:ro"
#    ports:
#      - "8000:80"
networks:
  default:
    external:
      name: bridge
volumes:
  pg-local:
    external: true
